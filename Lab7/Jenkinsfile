pipeline {

    agent any 
    stages{
        stage('Debug Workspace') {
            steps {
                sh '''
                    echo "Current user: $(whoami)"
                    echo "Workspace: $WORKSPACE"
                    echo "PWD: $(pwd)"
                    echo "Home: $HOME"
                    ls -la
                    git status || echo "Git not available"
                '''
            }
        }
        stage('Run as Root via Docker') {
            steps {
                sh '''
                    # Выполняем команды от root через Docker
                    docker run --rm --user root ubuntu:22.04 bash -c "
                        apt update
                        apt install -y qemu-system-arm
                        echo 'Я root! Мой ID: $(id -u)'
                    "
                '''
            }
        }
        stage('Qemu') {
            steps{
                echo 'Start qemu'
                sh 'apt install qemu-system-arm'
                sh 'apt update'
                sh 'wget https://jenkins.openbmc.org/job/ci-openbmc/lastSuccessfulBuild/distro=ubuntu,label=docker-builder,target=romulus/artifact/openbmc/build/tmp/deploy/images/romulus/*zip*/romulus.zip'
                sh 'unzip romulus.zip'
                sh '''
                qemu-system-arm -m 256 -M romulus-bmc -nographic -drive file=romulus/obmc-phosphor-image-romulus-20250212052422.static.mtd,format=raw,if=mtd -net nic -net user,hostfwd=:0.0.0.0:2222-:22,hostfwd=:0.0.0.0:2443-:443,hostfwd=udp:0.0.0.0:2623-:623,hostname=qemu
                expect "login:"
                send "root\\r"
                expect "Password:"
                send "0penBmc\\r"
                expect "root@romulus:"
                '''
            }
        }
        stage('Auto') {
            steps{
                echo 'Start autotests'
            }

        }
        stage('WebUI') {
            steps{
                echo 'Start WebUI tests'
            }

        }
        stage('Locust') {
            steps{
                echo 'Start Locust tests'
            }
        }
    }
}